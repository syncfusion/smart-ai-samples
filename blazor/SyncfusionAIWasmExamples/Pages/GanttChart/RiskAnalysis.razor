@page "/gantt-chart/risk-assessor"


@inject AzureAIService OpenAIService
@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons


@inject IJSRuntime JsInterop

<title>Syncfusion - Smart Risk Assessor in Gantt</title>

<h4 style="text-align:center;">Smart Risk Assessor</h4>

<div class="col-lg-12 control-section" id="gantt-control-section">

    <Description>
        <p>Using AI, this sample identifies at-risk tasks by analyzing their duration and dependencies, and highlights them with distinctive colors on their taskbars. Know more <a target="_blank" href="https://github.com/syncfusion/smart-ai-samples/blob/master/blazor/SyncfusionAIWasmExamples/Components/Pages/GanttChart/Readme.md">here</a>.</p>
    </Description>
    @if (showMessage)
    {
        <div>
            <SfButton CssClass="e-flat" IsPrimary="true" IconCss="e-icons e-refresh" IconPosition=@IconPosition.Right OnClick="Reload">Something went wrong.</SfButton>
        </div>
    }
    <div style="position: relative">
        <SfGantt @ref="Gantt" EnableCriticalPath="true" ProjectStartDate="@(new DateTime(2021,03,28))" ProjectEndDate="@(new DateTime(2021,07,30))" DataSource="@TaskCollection" Width="100%" TreeColumnIndex="1" WorkUnit="WorkUnit.Hour">
            <GanttTaskFields Dependency="Predecessor" Id="Id" Name="Name" StartDate="StartDate" EndDate="EndDate" Duration="Duration" Progress="Progress"
                             ParentID="ParentId" Work="Work" TaskType="TaskType">
            </GanttTaskFields>
            <GanttEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GanttEditSettings>
            <GanttTemplates TValue="GanttDataModel.TaskInfoModel">
                <TaskbarTemplate>
                    @{
                        var task = (context as GanttDataModel.TaskInfoModel);
                        if (task == null)
                        {
                            return;
                        }
                        var taskModel = Gantt.GetRowTaskModel(task);
                        string className = string.Empty;
                        if (riskAnalyzePriority.Any() && riskAnalyzePriority.ContainsKey(task.Id.ToString()))
                        {
                            if ((riskAnalyzePriority[task.Id.ToString()]).ToLower().Contains("high"))
                            {
                                className = "e-sf-ai-taskbar-red";
                            }
                            else if ((riskAnalyzePriority[task.Id.ToString()]).ToLower().Contains("low"))
                            {
                                className = "e-sf-ai-taskbar-orange";
                            }
                        }
                        <div class="e-gantt-child-taskbar e-gantt-child-taskbar-inner-div @className" style="height:22px;" tabindex=-1>
                            <div class="e-gantt-child-progressbar-inner-div e-gantt-child-progressbar  @className" style="height:22px;width:@(taskModel.ProgressWidth + "px");text-align: right;border-radius: 0px;">
                            </div>
                        </div>
                    }
                </TaskbarTemplate>
            </GanttTemplates>
            <GanttColumns>
                <GanttColumn Field="Id" HeaderText="ID" Visible="false"></GanttColumn>
                <GanttColumn Field="Name" HeaderText="Event Name" Width="250px"></GanttColumn>
                <GanttColumn Field="Duration" HeaderText="Duration"></GanttColumn>
                <GanttColumn Field="StartDate" HeaderText="Start Date"></GanttColumn>
                <GanttColumn Field="EndDate" HeaderText="End Date"></GanttColumn>
            </GanttColumns>
            <GanttLabelSettings TValue="GanttDataModel.TaskInfoModel">
                <RightLabelTemplate>
                    @{
                        var task = context as GanttDataModel.TaskInfoModel;
                        if (riskAnalyzeContent.Any() && riskAnalyzeContent.ContainsKey(task.Id.ToString()))
                        {
                            <p class="e-sf-ai-label-content">@riskAnalyzeContent[task.Id.ToString()]</p>
                        }
                    }
                </RightLabelTemplate>
            </GanttLabelSettings>
            <GanttCriticalPathSettings SlackValue="1"> </GanttCriticalPathSettings>
            <GanttSplitterSettings Position="28%"> </GanttSplitterSettings>
            <SfToolbar ID="Gantt_Toolbar">
                <ToolbarItems>
                    <ToolbarItem>
                        <Template>
                            <SfButton IsPrimary ID="openAI" @onclick="OpenAIHandler">Analyze Risk</SfButton>
                        </Template>
                    </ToolbarItem>
                </ToolbarItems>
            </SfToolbar>
        </SfGantt>
    </div>
</div>


<style>
    #Gantt_Toolbar {
        border: 1px solid lightgray !important;
        padding: 4px !important;
    }

    .e-icons.e-refresh::before {
        content: '\e706';
    }
</style>