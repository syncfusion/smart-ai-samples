@page "/pdfviewer/smart-redact"
@using Syncfusion.Blazor.SfPdfViewer
@using Syncfusion.Blazor.Spinner
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Notifications

@inject LocalEmbedder embedder;
@inject AzureAIService openAIService
@inject IJSRuntime JsRuntime
@implements IDisposable

<title>Syncfusion - Smart Redact</title>

<h4 style="text-align:center;">Smart Redact</h4>

<div>
    <Description>
        <p>This sample shows how the Syncfusion Blazor PDF Viewer uses AI to intelligently redact sensitive information. Users can select patterns like emails or names, and the AI will identify and redact sensitive data based on these patterns.
            Know more <a target="_blank" href="https://github.com/syncfusion/smart-ai-samples/blob/master/blazor/SyncfusionAIWasmExamples/Components/Pages/PDFViewer/Readme.md">here</a>.
        </p>
    </Description>
    <div style="position:relative">
        <div class="spinner-redact">
            <SfSpinner Size="40" @bind-Visible="@isSpinnerVisible"></SfSpinner>
        </div>
        <div class="parent" @onclick="ParentElementOnClick" style="width:@(isMobileDevice ? "99%" : "100%");">
            <div class="sample-header">
                <SfAppBar CssClass="app-bar" ColorMode="AppBarColor.Primary">
                    <span class="regular">Smart Redaction</span>
                    <AppBarSpacer></AppBarSpacer>
                    <SfButton OnClick="@Download" CssClass="e-inherit" IconCss="e-icons e-download">Download</SfButton>
                </SfAppBar>
            </div>
            <div class="sample-content">
                <div class="sample-left-content" style="width:@(isMobileDevice ? "100%" : (isPopupVisible ? "75%" : "100%"));">

                    @* Custom Toolbar *@
                    <div style="display:none">
                        <SfUploader @ref="@uploadFiles" ID="UploadFiles" ShowFileList="false" AllowedExtensions=".pdf">
                            <UploaderEvents OnUploadStart="@FileUploadSelected" Created="CreatedHandler"></UploaderEvents>
                            <UploaderAsyncSettings SaveUrl="https://blazor.syncfusion.com/services/production/api/FileUploader/Save" RemoveUrl="https://blazor.syncfusion.com/services/production/api/FileUploader/Remove"></UploaderAsyncSettings>
                        </SfUploader>
                    </div>

                    <SfToolbar @ref=@sfToolbar CssClass="custom-toolbar">
                        <ToolbarItems>
                            <ToolbarItem Text="Open File" PrefixIcon="e-icons e-folder-open" TabIndex="1" TooltipText="Open file" Id="pdfviewer_open" Align="ItemAlign.Left" CssClass="e-pv-open-document-container"></ToolbarItem>
                            <ToolbarItem Type="ItemType.Separator"></ToolbarItem>
                            <ToolbarItem OnClick="@ZoomOut" TabIndex="2" Text="Zoom Out" Disabled="IsZoomOutHidden" PrefixIcon="e-icons e-circle-remove" Id="zoomout" TooltipText="Zoom Out" Align=@ItemAlign.Left CssClass="e-pv-zoom-out-container"></ToolbarItem>
                            <ToolbarItem OnClick="@ZoomIn" TabIndex="3" Text="Zoom In" Disabled="IsZoomInHidden" PrefixIcon="e-icons e-circle-add" Id="zoomin" TooltipText="Zoom In" Align=@ItemAlign.Left CssClass="e-pv-zoom-in-container"></ToolbarItem>
                            <ToolbarItem Type="ItemType.Separator"></ToolbarItem>
                            <ToolbarItem OnClick="@DrawRectAngle" TabIndex="4" Text="Mark for Redaction" PrefixIcon="e-icons mark-redact" TooltipText="Mark for Redaction" CssClass="e-pv-black-out-container"></ToolbarItem>
                            <ToolbarItem OnClick="@ApplyRedaction" TabIndex="@(redactionCount <= 0 ? -1 : 5)" Disabled="@(redactionCount <= 0)" Text="Redact" PrefixIcon="e-icons e-redaction" TooltipText="Redact" CssClass="e-pv-redaction-container"></ToolbarItem>
                        </ToolbarItems>
                    </SfToolbar>

                    @* Pdf Viewer 2 *@
                    <SfPdfViewer2 @ref="sfPdfViewer2" DocumentPath="@documentPath" Width="100%" Height="calc(100% - 40px)" rectangleSettings="@rectangleSettings" EnableToolbar="false" EnableAnnotationToolbar="false" DownloadFileName="SmartRedaction.pdf" ZoomMode="ZoomMode.FitToPage">
                        <PdfViewerEvents DocumentLoaded="DocumentLoaded" DocumentUnloaded="DocumentUnLoaded" AnnotationAdded="OnAddAnnotation" AnnotationRemoved="OnRemoveAnnotation" ZoomChanged="OnZoomChanged"></PdfViewerEvents>
                        <PdfViewerContextMenuSettings ContextMenuItems="contextMenuItems"></PdfViewerContextMenuSettings>
                    </SfPdfViewer2>
                    @if (isDocumentLoaded && !isPopupVisible)
                    {
                        <SfFab IconCss="e-icons e-ai-chat" OnClick="ShowHidePopup" ></SfFab>
                    }
                </div>
                <div class="sample-right-content" style="width:@(isMobileDevice ? "0%" : (isPopupVisible ? "25%" : "0%"));">

                    @if (isPopupVisible)
                    {
                        <div class="container">
                            <div class="card">
                                <div class="redact-header"><SfButton IconCss="e-icons e-close" CssClass="closebtn" OnClick="@ShowHidePopup"></SfButton></div>
                                <div class="card-body">
                                    @if (!isDataFetched)
                                    {
                                        <div class="redact-container">
                                            <div class="redact-patterns">
                                                <h6>Select Sensitive Patterns for Redaction</h6>
                                                <SfTreeView @ref="sensitivePatternTreeView" TValue="TreeItem" ShowCheckBox="true" @bind-CheckedNodes="@checkedPatternTreeView">
                                                    <TreeViewFieldsSettings DataSource="@patterns" Id="NodeId" Text="NodeText" Expanded="Expanded" Child="@("Child")" IsChecked="IsChecked"></TreeViewFieldsSettings>
                                                    <TreeViewEvents TValue="TreeItem" NodeSelected="OnPatternTreeViewNodeSelected"></TreeViewEvents>
                                                </SfTreeView>
                                            </div>
                                            <div class="btn-container">
                                                <SfButton Disabled="@isScanDisabled" IsPrimary="true" CssClass="scan-btn" @onclick="ScanClick">Scan</SfButton>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="redact-options">
                                            <div>
                                                <h6>Select the following sensitive information to get redacted</h6>
                                                <SfTreeView @ref="sensitiveInfoTreeView" TValue="TreeItem" ShowCheckBox="true" @bind-CheckedNodes="@checkedInfoTreeView">
                                                    <TreeViewFieldsSettings DataSource="@sensitiveInfo" Id="NodeId" Text="NodeText" Expanded="Expanded" Child="@("Child")" IsChecked="IsChecked"></TreeViewFieldsSettings>
                                                    <TreeViewEvents TValue="TreeItem" NodeChecked="@OnInformationTreeViewNodeChecked" NodeSelected="OnInformationTreeViewNodeSelected"></TreeViewEvents>
                                                </SfTreeView>
                                            </div>
                                        </div>
                                        
                                        <div class="btn-container">
                                            <SfButton Disabled="@isSpinnerVisible" CssClass="redact-btn" @onclick="CancelClick">Cancel</SfButton>
                                            <SfButton Disabled="@isRedactButtonDisabled" IsPrimary="true" CssClass="redact-btn" @onclick="ApplyRedaction">Redact</SfButton>
                                        </div>
                                    }
                                    <SfToast @ref="toastMessage" ID="toast_message">
                                        <ToastPosition X="@toastPosition"></ToastPosition>
                                    </SfToast>
                                </div>
                                <div class="sample-container-card-body" style="display:@displayBlurContainer"></div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .e-fab.e-btn.e-fab-right {
        right: 75px !important;
    }
</style>
